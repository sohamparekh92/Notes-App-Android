<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context="com.example.soham.firstapp.CreativeInfoActivity">

    <ScrollView
        android:layout_width="match_parent"
        android:layout_height="500dp"
        android:id="@+id/scrollView">

        <LinearLayout
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">


        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:textAppearance="?android:attr/textAppearanceMedium"
            android:text="The creative feature in this app uses the jaccard coefficient similarity measure to retrieve documents matching the query It is a ranked information retrieval technique which assigns a score to a document after performing the match with the query. It uses the formula given below: "
            android:id="@+id/textView4" />


    <ImageView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/imageView"
        android:src="@drawable/jaccard"
        android:layout_centerVertical="true"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true" />

    <TextView
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:textAppearance="?android:attr/textAppearanceMedium"
        android:text="Intersection of strings in query and document over the total number of strings in both, query as well as the document. Once the score for all the documents are computed then the documents are ranked in the descending order of their jaccard score. The one with the highest document will be at the top. I have used hashmaps to store title and content.  For sorting, I use a hashmap of float and arrayList of strings to sort the results and transfer them into an arrayList of strings to show the result. "
        android:id="@+id/textView5"
        android:layout_below="@+id/imageView"
        android:layout_alignParentLeft="true"
        android:layout_alignParentStart="true" />

        </LinearLayout>

    </ScrollView>

</RelativeLayout>
